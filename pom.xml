<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ga.rugal</groupId>
  <artifactId>parent</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <!--
        configuration
    -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
    <!-- repository -->
    <sonatype.snapshot>https://oss.sonatype.org/content/repositories/snapshots</sonatype.snapshot>
    <sonatype.release>https://oss.sonatype.org/content/repositories/releases/</sonatype.release>
    <!-- test toggle -->
    <skip.surefire.tests>true</skip.surefire.tests>
    <skip.failsafe.tests>true</skip.failsafe.tests>
    <!-- surefire -->
    <surefire.report.path>${project.build.directory}/surefire-reports</surefire.report.path>
    <surefire.agent.path>${surefire.report.path}/jacoco.exec</surefire.agent.path>
    <jacoco.surefire.report.path>${project.reporting.outputDirectory}/jacoco/surefire</jacoco.surefire.report.path>
    <!-- failsafe -->
    <failsafe.report.path>${project.build.directory}/failsafe-reports</failsafe.report.path>
    <failsafe.agent.path>${failsafe.report.path}/jacoco.exec</failsafe.agent.path>
    <jacoco.failsafe.report.path>${project.reporting.outputDirectory}/jacoco/failsafe</jacoco.failsafe.report.path>
    <!-- overall -->
    <overall.report.path>${project.build.directory}/overall-reports</overall.report.path>
    <overall.agent.path>${overall.report.path}/jacoco.exec</overall.agent.path>
    <jacoco.overall.report.path>${project.reporting.outputDirectory}/jacoco/overall</jacoco.overall.report.path>
    <!-- swagger codegen -->
    <swagger.codegen.package.root>${project.groupId}.${project.artifactId}.swagger</swagger.codegen.package.root>
    <swagger.codegen.model.package>${swagger.codegen.package.root}.model</swagger.codegen.model.package>
    <swagger.codegen.api.package>${swagger.codegen.package.root}.api</swagger.codegen.api.package>
    <swagger.codegen.invoker.package>${swagger.codegen.package.root}.invoker</swagger.codegen.invoker.package>
    <!--
        dependency version
    -->
    <servlet.version>4.0.1</servlet.version>
    <lombok.version>1.18.6</lombok.version>
    <spring.cloud.dependency.version>Finchley.RELEASE</spring.cloud.dependency.version>
    <spring.boot.dependency.version>2.1.3.RELEASE</spring.boot.dependency.version>
    <mapstruct.version>1.3.0.Final</mapstruct.version>
    <swagger.version>1.5.21</swagger.version>
    <springfox.version>2.9.2</springfox.version>
    <slf4j.version>1.7.25</slf4j.version>
    <swagger.codegen.version>2.4.1</swagger.codegen.version>
    <faker.version>0.17.2</faker.version>
    <mockito.version>2.24.5</mockito.version>
    <hibernate.validator.version>5.4.3.Final</hibernate.validator.version>
    <puppycrawl.version>8.17</puppycrawl.version>
    <!--
        plugin version
    -->
    <compiler.plugin.version>3.8.0</compiler.plugin.version>
    <git.commit.id.plugin.version>2.2.6</git.commit.id.plugin.version>
    <test.plugin.version>2.22.1</test.plugin.version>
    <source.plugin.version>3.0.1</source.plugin.version>
    <jacoco.plugin.version>0.8.3</jacoco.plugin.version>
    <deploy.plugin.version>2.8.2</deploy.plugin.version>
    <release.plugin.version>2.5.3</release.plugin.version>
    <checkstyle.plugin.version>3.0.0</checkstyle.plugin.version>
    <findbugs.plugin.version>3.0.5</findbugs.plugin.version>
    <pmd.plugin.version>3.11.0</pmd.plugin.version>
    <flyway.plugin.version>5.2.4</flyway.plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!--
          dependecy train
      -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring.cloud.dependency.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.dependency.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!--
          servlet
      -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${servlet.version}</version>
        <scope>provided</scope>
      </dependency>
      <!--
          codegen
      -->
      <!-- lombok -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>
      <!-- mapstruct -->
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-jdk8</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <!-- swagger annotation -->
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger.version}</version>
      </dependency>
      <!-- swagger codegen -->
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-codegen</artifactId>
        <version>${swagger.codegen.version}</version>
      </dependency>
      <!-- swagger UI -->
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger2</artifactId>
        <version>${springfox.version}</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger-ui</artifactId>
        <version>${springfox.version}</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-bean-validators</artifactId>
        <version>${springfox.version}</version>
      </dependency>
      <!--
          logging
      -->
      <!-- slf4j -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <!--
          test
      -->
      <!-- faker -->
      <dependency>
        <groupId>com.github.javafaker</groupId>
        <artifactId>javafaker</artifactId>
        <version>${faker.version}</version>
        <scope>test</scope>
      </dependency>
      <!-- mockito -->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <!--
          JEP
      -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>${hibernate.validator.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <!-- checkstyle -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${checkstyle.plugin.version}</version>
          <configuration>
            <configLocation>configuration/checkstyle/checkstyle.xml</configLocation>
            <suppressionsLocation>configuration/checkstyle/suppression.xml</suppressionsLocation>
            <excludes>target/**/*,**/dto/**/*, **/ExceptionController.java</excludes>
            <encoding>${project.build.sourceEncoding}</encoding>
            <consoleOutput>true</consoleOutput>
            <failsOnError>true</failsOnError>
            <failOnViolation>true</failOnViolation>
            <violationSeverity>info</violationSeverity>
            <linkXRef>false</linkXRef>
            <skip>false</skip>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${puppycrawl.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>validate</id>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- findbugs -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>${findbugs.plugin.version}</version>
          <configuration>
            <skip>false</skip>
            <failOnError>true</failOnError>
            <effort>Max</effort>
            <threshold>Low</threshold>
            <xmlOutput>true</xmlOutput>
            <outputDirectory>${project.build.directory}/findbugs</outputDirectory>
            <excludeFilterFile>configuration/findbugs/exclude.xml</excludeFilterFile>
          </configuration>
          <executions>
            <execution>
              <phase>compile</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- PMD -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${pmd.plugin.version}</version>
          <configuration>
            <skip>false</skip>
            <failOnViolation>true</failOnViolation>
            <printFailingErrors>true</printFailingErrors>
            <linkXRef>false</linkXRef>
            <analysisCache>true</analysisCache>
            <analysisCacheLocation>${project.build.directory}/pmd.cache</analysisCacheLocation>
            <excludes>
              <exclude>**/generated/**/*.java</exclude>
            </excludes>
            <excludeRoots>
              <excludeRoot>target/generated-sources</excludeRoot>
            </excludeRoots>
          </configuration>
          <executions>
            <execution>
              <phase>compile</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- source -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${source.plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- javadoc -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${source.plugin.version}</version>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- deploy -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${deploy.plugin.version}</version>
          <executions>
            <execution>
              <id>deploy</id>
              <phase>deploy</phase>
              <goals>
                <goal>deploy</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- release -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${release.plugin.version}</version>
          <configuration>
            <tagNameFormat>v@{project.version}</tagNameFormat>
          </configuration>
        </plugin>
        <!-- git commit id -->
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>${git.commit.id.plugin.version}</version>
          <executions>
            <execution>
              <id>get-git-info</id>
              <goals>
                <goal>revision</goal>
              </goals>
              <phase>initialize</phase>
            </execution>
          </executions>
          <configuration>
            <failOnNoGitDirectory>false</failOnNoGitDirectory>
            <generateGitPropertiesFile>true</generateGitPropertiesFile>
            <verbose>false</verbose>
            <generateGitPropertiesFilename>
              ${project.build.outputDirectory}/git.properties
            </generateGitPropertiesFilename>
            <gitDescribe>
              <skip>false</skip>
              <always>false</always>
              <dirty>-dirty</dirty>
            </gitDescribe>
          </configuration>
        </plugin>
        <!-- spring boot -->
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
              <configuration>
                <classifier>exec</classifier>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!--
            Test
        -->
        <!-- unit test -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${test.plugin.version}</version>
          <configuration>
            <skipTests>${skip.surefire.tests}</skipTests>
            <excludes>
              <exclude>**/*IntegrationTest.java</exclude>
            </excludes>
            <trimStackTrace>false</trimStackTrace>
            <argLine>-Djdk.net.URLClassPath.disableClassPathURLCheck=true ${jacoco.surefire.arg}</argLine>
            <reportsDirectory>${surefire.report.path}</reportsDirectory>
          </configuration>
        </plugin>
        <!-- integration test -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${test.plugin.version}</version>
          <configuration>
            <skipTests>${skip.failsafe.tests}</skipTests>
            <includes>
              <include>**/*IntegrationTest.java</include>
            </includes>
            <trimStackTrace>false</trimStackTrace>
            <argLine>-Djdk.net.URLClassPath.disableClassPathURLCheck=true ${jacoco.failsafe.arg}</argLine>
            <reportsDirectory>${failsafe.report.path}</reportsDirectory>
          </configuration>
          <executions>
            <execution>
              <id>integration-tests</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- test coverage -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.plugin.version}</version>
          <!-- exclude from jacoco coverage -->
          <configuration>
            <excludes>
              <exclude>**/exception/*</exclude>
              <exclude>**/swagger/**</exclude>
              <exclude>**/mapper/**</exclude>
              <exclude>**/config/**</exclude>
            </excludes>
            <rules>
              <rule>
                <element>CLASS</element>
                <limits>
                  <limit>
                    <counter>LINE</counter>
                    <value>COVEREDRATIO</value>
                    <minimum>0.90</minimum>
                  </limit>
                  <limit>
                    <counter>BRANCH</counter>
                    <value>COVEREDRATIO</value>
                    <minimum>0.90</minimum>
                  </limit>
                </limits>
              </rule>
            </rules>
          </configuration>
          <executions>
            <!-- surefire report -->
            <execution>
              <id>prepare-surefire-agent</id>
              <phase>process-test-classes</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <propertyName>jacoco.surefire.arg</propertyName>
                <destFile>${surefire.agent.path}</destFile>
                <append>true</append>
              </configuration>
            </execution>
            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <dataFile>${surefire.agent.path}</dataFile>
                <outputDirectory>${jacoco.surefire.report.path}</outputDirectory>
              </configuration>
            </execution>
            <!-- failsafe report -->
            <execution>
              <id>prepare-it-agent</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <destFile>${failsafe.agent.path}</destFile>
                <propertyName>jacoco.failsafe.arg</propertyName>
                <append>true</append>
              </configuration>
            </execution>
            <execution>
              <id>post-integration-test</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <dataFile>${failsafe.agent.path}</dataFile>
                <outputDirectory>${jacoco.failsafe.report.path}</outputDirectory>
              </configuration>
            </execution>
            <!-- overall report -->
            <execution>
              <id>merge-results</id>
              <phase>verify</phase>
              <goals>
                <goal>merge</goal>
              </goals>
              <configuration>
                <fileSets>
                  <fileSet>
                    <directory>${surefire.report.path}</directory>
                    <includes>
                      <include>*.exec</include>
                    </includes>
                  </fileSet>
                  <fileSet>
                    <directory>${failsafe.report.path}</directory>
                    <includes>
                      <include>*.exec</include>
                    </includes>
                  </fileSet>
                </fileSets>
                <destFile>${overall.agent.path}</destFile>
              </configuration>
            </execution>
            <execution>
              <id>post-merge-report</id>
              <phase>verify</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <dataFile>${overall.agent.path}</dataFile>
                <outputDirectory>${jacoco.overall.report.path}</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- swagger codegen -->
        <plugin>
          <groupId>io.swagger</groupId>
          <artifactId>swagger-codegen-maven-plugin</artifactId>
          <version>${swagger.codegen.version}</version>
          <configuration>
            <inputSpec>configuration/swagger/openapi.yml</inputSpec>
            <skipOverwrite>true</skipOverwrite>
            <language>spring</language>
            <modelPackage>${swagger.codegen.model.package}</modelPackage>
            <apiPackage>${swagger.codegen.api.package}</apiPackage>
            <invokerPackage>${swagger.codegen.invoker.package}</invokerPackage>
            <generateSupportingFiles>false</generateSupportingFiles>
            <generateApis>true</generateApis>
            <modelNameSuffix>Dto</modelNameSuffix>
            <configOptions>
              <dateLibrary>java8</dateLibrary>
              <java8>true</java8>
              <interfaceOnly>true</interfaceOnly>
            </configOptions>
          </configuration>
          <executions>
            <execution>
              <id>swagger-codegen-workflow</id>
              <goals>
                <goal>generate</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- flyway plugin -->
        <plugin>
          <groupId>org.flywaydb</groupId>
          <artifactId>flyway-maven-plugin</artifactId>
          <version>${flyway.plugin.version}</version>
          <configuration>
            <schemas>
              <schema>test</schema>
            </schemas>
            <installedBy>Rugal Bernstein</installedBy>
            <configFile>src/main/resources/db/local.properties</configFile>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- compiler -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler.plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <distributionManagement>
    <snapshotRepository>
      <id>sonatype-snapshot</id>
      <url>${sonatype.snapshot}</url>
    </snapshotRepository>
    <repository>
      <id>sonatype-release</id>
      <url>${sonatype.release}</url>
    </repository>
  </distributionManagement>
</project>
